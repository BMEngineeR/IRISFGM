% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/CellTypePrediction.R
\name{FindClassBasedOnMC}
\alias{FindClassBasedOnMC}
\alias{.final}
\alias{FindClassBasedOnMC,IRISFGM-method}
\title{FindClassBasedOnMC}
\usage{
FindClassBasedOnMC(object, ...)

.final(object = NULL, method = "MCL", K = 5)

\S4method{FindClassBasedOnMC}{IRISFGM}(object = NULL, method = "MCL", K = 5)
}
\arguments{
\item{object}{input IRIS-FGM object}

\item{...}{other arguments passed to methods}

\item{method}{using MCL(Markov Cluster) algorithm to predict clusters. There is alternative option which is 'SC.' ( 
Unnormalized spectral clustering function. Uses Partitioning Around Medoids clustering instead of K-means.)}

\item{K}{expected number of predicted clusters when you are using 'SC' method for cell clustering and this parameter does not work for 'MCL'}
}
\value{
It will reture cell clustering results based on MCL method.
}
\description{
This function is for performing Markov chain clustering regarding generated co-expression gene modules. This clustering method is working for relative small dataset.
If you have a large dataset, We recommend you should use Seurat clustering wrapped in this IRISFGM package. See details \code{\link{RunLTMG}},
\code{\link{RunDimensionReduction}}, and \code{\link{RunClassification}}.
}
\examples{
data(example_object)
example_object<- RunLTMG(example_object,Gene_use = "200")
example_object <- CalBinaryMultiSignal(example_object)
\donttest{
example_object <- RunBicluster(example_object,
                              DiscretizationModel = 'LTMG',
                              OpenDual = FALSE,
                              NumBlockOutput = 1000,
                              BlockOverlap = 0.7,
                              BlockCellMin = 15)
example_object <- FindClassBasedOnMC(example_object)
}
}
